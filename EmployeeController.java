package com.example.demo;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class EmployeeController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private EmployeeRepository userRepository;

//  @PostMapping(path="/add") // Map ONLY POST Requests
  @RequestMapping(value="/add", method = RequestMethod.POST)
  public @ResponseBody String addNewUser (@RequestParam String name
      , @RequestParam Integer salary) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    EmployeeModel n = new EmployeeModel();
    n.setEmpName(name);
    n.setEmpSalary(salary);
    userRepository.save(n);
    return "Saved";
  }

//  @GetMapping(path="/all")
  @RequestMapping(value="/all", method = RequestMethod.GET)
  public @ResponseBody Iterable<EmployeeModel> getAllUsers() {
    // This returns a JSON or XML with the users
	  System.out.println("testing the Get call");
    return userRepository.findAll();
  }
}